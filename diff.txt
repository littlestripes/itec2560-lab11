diff --git a/student-sign-in/package-lock.json b/student-sign-in/package-lock.json
index 21eb15b..9b99eab 100644
--- a/student-sign-in/package-lock.json
+++ b/student-sign-in/package-lock.json
@@ -8,6 +8,9 @@
       "name": "student-sign-in",
       "version": "0.0.0",
       "dependencies": {
+        "bootstrap": "^5.3.3",
+        "bootstrap-icons": "^1.11.3",
+        "pinia": "^2.1.7",
         "vue": "^3.4.21"
       },
       "devDependencies": {
@@ -399,6 +402,16 @@
       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz",
       "integrity": "sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg=="
     },
+    "node_modules/@popperjs/core": {
+      "version": "2.11.8",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
+      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
+      "peer": true,
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/popperjs"
+      }
+    },
     "node_modules/@rollup/rollup-android-arm-eabi": {
       "version": "4.14.0",
       "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.14.0.tgz",
@@ -659,6 +672,11 @@
         "@vue/shared": "3.4.21"
       }
     },
+    "node_modules/@vue/devtools-api": {
+      "version": "6.6.1",
+      "resolved": "https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-6.6.1.tgz",
+      "integrity": "sha512-LgPscpE3Vs0x96PzSSB4IGVSZXZBZHpfxs+ZA1d+VEPwHdOXowy/Y2CsvCAIFrf+ssVU1pD1jidj505EpUnfbA=="
+    },
     "node_modules/@vue/reactivity": {
       "version": "3.4.21",
       "resolved": "https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.4.21.tgz",
@@ -703,6 +721,39 @@
       "resolved": "https://registry.npmjs.org/@vue/shared/-/shared-3.4.21.tgz",
       "integrity": "sha512-PuJe7vDIi6VYSinuEbUIQgMIRZGgM8e4R+G+/dQTk0X1NEdvgvvgv7m+rfmDH1gZzyA1OjjoWskvHlfRNfQf3g=="
     },
+    "node_modules/bootstrap": {
+      "version": "5.3.3",
+      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.3.tgz",
+      "integrity": "sha512-8HLCdWgyoMguSO9o+aH+iuZ+aht+mzW0u3HIMzVu7Srrpv7EBBxTnrFlSCskwdY1+EOFQSm7uMJhNQHkdPcmjg==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/twbs"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/bootstrap"
+        }
+      ],
+      "peerDependencies": {
+        "@popperjs/core": "^2.11.8"
+      }
+    },
+    "node_modules/bootstrap-icons": {
+      "version": "1.11.3",
+      "resolved": "https://registry.npmjs.org/bootstrap-icons/-/bootstrap-icons-1.11.3.tgz",
+      "integrity": "sha512-+3lpHrCw/it2/7lBL15VR0HEumaBss0+f/Lb6ZvHISn1mlK83jjFpooTLsMWbIjJMDjDjOExMsTxnXSIT4k4ww==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/twbs"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/bootstrap"
+        }
+      ]
+    },
     "node_modules/csstype": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
@@ -809,6 +860,56 @@
       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
       "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
     },
+    "node_modules/pinia": {
+      "version": "2.1.7",
+      "resolved": "https://registry.npmjs.org/pinia/-/pinia-2.1.7.tgz",
+      "integrity": "sha512-+C2AHFtcFqjPih0zpYuvof37SFxMQ7OEG2zV9jRI12i9BOy3YQVAHwdKtyyc8pDcDyIc33WCIsZaCFWU7WWxGQ==",
+      "dependencies": {
+        "@vue/devtools-api": "^6.5.0",
+        "vue-demi": ">=0.14.5"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/posva"
+      },
+      "peerDependencies": {
+        "@vue/composition-api": "^1.4.0",
+        "typescript": ">=4.4.4",
+        "vue": "^2.6.14 || ^3.3.0"
+      },
+      "peerDependenciesMeta": {
+        "@vue/composition-api": {
+          "optional": true
+        },
+        "typescript": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/pinia/node_modules/vue-demi": {
+      "version": "0.14.7",
+      "resolved": "https://registry.npmjs.org/vue-demi/-/vue-demi-0.14.7.tgz",
+      "integrity": "sha512-EOG8KXDQNwkJILkx/gPcoL/7vH+hORoBaKgGe+6W7VFMvCYJfmF2dGbvgDroVnI8LU7/kTu8mbjRZGBU1z9NTA==",
+      "hasInstallScript": true,
+      "bin": {
+        "vue-demi-fix": "bin/vue-demi-fix.js",
+        "vue-demi-switch": "bin/vue-demi-switch.js"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/antfu"
+      },
+      "peerDependencies": {
+        "@vue/composition-api": "^1.0.0-rc.1",
+        "vue": "^3.0.0-0 || ^2.6.0"
+      },
+      "peerDependenciesMeta": {
+        "@vue/composition-api": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/postcss": {
       "version": "8.4.38",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.38.tgz",
diff --git a/student-sign-in/package.json b/student-sign-in/package.json
index aeaea6d..f4f6e98 100644
--- a/student-sign-in/package.json
+++ b/student-sign-in/package.json
@@ -9,6 +9,9 @@
     "preview": "vite preview"
   },
   "dependencies": {
+    "bootstrap": "^5.3.3",
+    "bootstrap-icons": "^1.11.3",
+    "pinia": "^2.1.7",
     "vue": "^3.4.21"
   },
   "devDependencies": {
diff --git a/student-sign-in/src/App.vue b/student-sign-in/src/App.vue
index 341dbf0..415222d 100644
--- a/student-sign-in/src/App.vue
+++ b/student-sign-in/src/App.vue
@@ -1,30 +1,21 @@
 <script setup>
-import HelloWorld from './components/HelloWorld.vue'
+
+import NewStudentForm from './components/NewStudentForm.vue';
+import StudentTable from './components/StudentTable.vue';
+import StudentMessage from './components/StudentMessage.vue';
+
 </script>
 
+
 <template>
-  <div>
-    <a href="https://vitejs.dev" target="_blank">
-      <img src="/vite.svg" class="logo" alt="Vite logo" />
-    </a>
-    <a href="https://vuejs.org/" target="_blank">
-      <img src="./assets/vue.svg" class="logo vue" alt="Vue logo" />
-    </a>
-  </div>
-  <HelloWorld msg="Vite + Vue" />
+
+    <NewStudentForm></NewStudentForm>
+    <StudentTable></StudentTable>
+    <StudentMessage></StudentMessage>
+
 </template>
 
+
 <style scoped>
-.logo {
-  height: 6em;
-  padding: 1.5em;
-  will-change: filter;
-  transition: filter 300ms;
-}
-.logo:hover {
-  filter: drop-shadow(0 0 2em #646cffaa);
-}
-.logo.vue:hover {
-  filter: drop-shadow(0 0 2em #42b883aa);
-}
+
 </style>
diff --git a/student-sign-in/src/components/NewStudentForm.vue b/student-sign-in/src/components/NewStudentForm.vue
index e69de29..30ddcf6 100644
--- a/student-sign-in/src/components/NewStudentForm.vue
+++ b/student-sign-in/src/components/NewStudentForm.vue
@@ -0,0 +1,74 @@
+<script setup>
+
+import { ref } from 'vue';
+
+import { useStudentStore } from '../stores/StudentStore';
+const studentStore = useStudentStore();
+
+const newStudentName = ref('');
+const newStarID = ref('');
+
+const formErrors = ref([]);
+
+const addStudent = () => {
+    formErrors.value = [];
+
+    if (!newStudentName.value) {
+        formErrors.value.push('Student name must be entered');
+    }
+
+    if (!newStarID.value) {
+        formErrors.value.push('StarID must be entered');
+    }
+
+    // if there aren't any errors
+    if (formErrors.value.length == 0) {
+        let student = {
+            name: newStudentName.value,
+            starID: newStarID.value,
+            present: false
+        };
+
+        studentStore.addNewStudent(student);
+
+        newStudentName.value = '';
+        newStarID.value = '';
+    }
+}
+
+</script>
+
+
+<template>
+
+    <div id="new-student-form-errors" class="m-2">
+        <div class="alert alert-danger" v-if="formErrors.length > 0">
+            <li v-for="error in formErrors" :key="error">
+                {{ error }}
+            </li>
+        </div>
+    </div>
+
+
+    <div id="new-student-form" class="card add-student m-2 p-2">
+        <h4 class="card-title">Add new student</h4>
+
+        <div class="form-group mb-3">
+            <label for="name">Name</label>
+            <input id="name" class="form-control" v-model.trim="newStudentName">
+        </div>
+
+        <div class="form-group mb-3">
+            <label for="starID">Star ID</label>
+            <input id="starID" class="form-control" v-model.trim="newStarID">
+        </div>
+
+        <button class="btn btn-primary" @click="addStudent">Add</button>
+    </div>
+
+</template>
+
+
+<style scoped>
+
+</style>
diff --git a/student-sign-in/src/components/StudentMessage.vue b/student-sign-in/src/components/StudentMessage.vue
index e69de29..e93b49d 100644
--- a/student-sign-in/src/components/StudentMessage.vue
+++ b/student-sign-in/src/components/StudentMessage.vue
@@ -0,0 +1,31 @@
+<script setup>
+
+import { useStudentStore } from '../stores/StudentStore.js';
+import { storeToRefs } from 'pinia';
+
+const studentStore = useStudentStore();
+
+const { mostRecentStudent } = storeToRefs(studentStore);
+
+</script>
+
+
+<template>
+
+    <div id="welcome-or-goodbye-message" class="m-2">
+        <div v-if="mostRecentStudent.name">
+            <div v-if="mostRecentStudent.present" class="alert alert-success">
+                Welcome, {{ mostRecentStudent.name }}!
+            </div>
+            <div v-else class="alert alert-info">
+                Goodbye, {{ mostRecentStudent.name }}. See you later!
+            </div>
+        </div>
+    </div>
+
+</template>
+
+
+<style scoped>
+
+</style>
diff --git a/student-sign-in/src/components/StudentTable.vue b/student-sign-in/src/components/StudentTable.vue
index e69de29..10fdd3b 100644
--- a/student-sign-in/src/components/StudentTable.vue
+++ b/student-sign-in/src/components/StudentTable.vue
@@ -0,0 +1,77 @@
+<script setup>
+
+ import { useStudentStore } from '../stores/StudentStore.js';
+
+ import { storeToRefs } from 'pinia';
+ import { computed } from 'vue';
+
+ import StudentRow from './StudentRow.vue';
+
+ const studentStore = useStudentStore();
+
+ const { sortedStudents, studentCount } = storeToRefs(studentStore);
+
+ const arrivedOrLeft = (student, isStudentPresent) => {
+    student.present = isStudentPresent;
+    studentStore.arrivedOrLeft(student);
+ };
+
+ const deleteStudent = (student) => {
+    studentStore.deleteStudent(student);
+ };
+
+ const pluralStudentMessage = computed(() => {
+    if (studentCount.value == 1) {
+        return 'There is 1 student in class.';
+    } else {
+        return `There are ${studentCount.value} students in class.`;
+    }
+ });
+
+</script>
+
+
+<template>
+
+    <div id="student-list-table" class="card m-2 p-2">
+        <h4 class="card-title">Student List</h4>
+        <h5 class="card-subtitle text-muted"> {{ pluralStudentMessage }} </h5>
+        <div id="student-table">
+            <table class="table">
+                <thead>
+                    <tr>
+                        <th>Name</th>
+                        <th>StarID</th>
+                        <th>Present?</th>
+                    </tr>
+                </thead>
+
+                <tbody>
+                    <StudentRow
+                        v-for="student in sortedStudents"
+                        :student="student"
+                        @arrived-or-left="arrivedOrLeft"
+                        @delete-student="deleteStudent">
+                    </StudentRow>
+                </tbody>
+
+            </table>
+        </div>
+    </div>
+
+</template>
+
+
+<style scoped>
+
+#student-table {
+    max-height: 500px;
+    overflow: scroll;
+}
+
+th, td {
+    width: 25%;
+    text-align: center;
+}
+
+</style>
diff --git a/student-sign-in/src/main.js b/student-sign-in/src/main.js
index 2425c0f..8c77840 100644
--- a/student-sign-in/src/main.js
+++ b/student-sign-in/src/main.js
@@ -1,5 +1,16 @@
-import { createApp } from 'vue'
-import './style.css'
-import App from './App.vue'
+import { createApp } from 'vue';
+import { createPinia } from 'pinia';
 
-createApp(App).mount('#app')
+import 'bootstrap/dist/css/bootstrap.min.css';
+import 'bootstrap-icons/font/bootstrap-icons.css';
+
+import './style.css';
+
+import App from './App.vue';
+
+const app = createApp(App);
+const pinia = createPinia();
+
+app.use(pinia);
+
+app.mount('#app');
